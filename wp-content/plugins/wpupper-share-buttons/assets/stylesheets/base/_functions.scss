@function remove-unit($number) {
	$unit: unit($number);
	$one: 1;

	@if $unit == "px" { $one: 1px; }
	@if $unit == "em" { $one: 1px; }
	@if $unit == "%"  { $one: 1px; }

	@return $number / $one;
}

@function flex( $target, $context, $unit: "em" ) {
	$size: remove-unit($target) / remove-unit($context);

	@if $unit == "em" {
		@return #{$size}em;
	}

	@if $unit == "%" {
		@return percentage($size);
	}
}

@function perc( $target, $context ) {
	@return flex( $target, $context, "%" );
}

@function em( $target, $context:$fontSizeDefault ) {
	@return flex($target, $context, "em");
}

@function get-social-colour($colour) {

	@if map-has-key( $mediaColours, $colour ) {
		@return map-get( $mediaColours, $colour );
	}

	@if type-of( $colour ) != colour {
		@error "Invalid colour name: `#{$colour}`.";
	}
}